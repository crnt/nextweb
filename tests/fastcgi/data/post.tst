field=field&another-field=test-field&text=Standard+Template+Library%3A+Containers%0D%0A%0D%0AA+container+is+a+holder+object+that+stores+a+collection+other+objects+%28its+elements%29.+They+are+implemented+as+class+templates%2C+which+allows+a+great+flexibility+in+the+types+supported+as+elements.%0D%0A%0D%0AThe+container+manages+the+storage+space+for+its+elements+and+provides+member+functions+to+access+them%2C+either+directly+or+through+iterators+%28reference+objects+with+similar+properties+to+pointers%29.%0D%0A%0D%0AContainers+replicate+structures+very+commonly+used+in+programming%3A+dynamic+arrays+%28vector%29%2C+queues+%28queue%29%2C+stacks+%28stack%29%2C+heaps+%28priority_queue%29%2C+linked+lists+%28list%29%2C+trees+%28set%29%2C+associative+arrays+%28map%29...%0D%0A%0D%0AMany+containers+have+several+member+functions+in+common%2C+and+share+functionalities.+The+decision+of+which+type+of+container+to+use+for+a+specific+need+does+not+generally+depend+only+on+the+functionality+offered+by+the+container%2C+but+also+on+the+efficiency+of+some+of+its+members+%28complexity%29.+This+is+especially+true+for+sequence+containers%2C+which+offer+different+trade-offs+in+complexity+between+inserting%2Fremoving+elements+and+accessing+them.%0D%0A%0D%0Astack%2C+queue+and+priority_queue+are+implemented+as+container+adaptors.+Container+adaptors+are+not+full+container+classes%2C+but+classes+that+provide+a+specific+interface+relying+on+an+object+of+one+of+the+container+classes+%28such+as+deque+or+list%29+to+handle+the+elements.+The+underlying+container+is+encapsulated+in+such+a+way+that+its+elements+are+accessed+by+the+members+of+the+container+class+independently+of+the+underlying+container+class+used.